#!/usr/bin/python3
"""Define Square class."""


class Square:
    """class Square"""
    def __init__(self, size=0, position=(0, 0)):
        """initialize square:
        Args:
        size(int): the size of the square
        position(int, int): the position"""
        self.size = size
        self.position = position

    def area(self):
        """calculate area"""
        return (self.__size)**2

    @property
    def size(self):
        """get value of size"""
        return self.__size

    @size.setter
    def size(self, value):
        """set the value of size
        based on restrictions"""
        if not isinstance(value, int):
            raise TypeError("size must be an integer")
        elif value < 0:
            raise ValueError("size must be >= 0")
        else:
            self.__size = value

    @property
    def position(self):
        """get position"""
        return self.__position

    @position.setter
    def position(self, value):
        """set position value
        Args:
        value: value of position
        """
        if (not isinstance(value, tuple) or
                len(value) != 2 or
                not all(isinstance(num, int) for num in value) or
                not all(num >= 0 for num in value)):
            raise TypeError("position must be a tuple of 2 positive integers")
        else:
            self.__position = value

    def my_print(self):
        """print square with #"""
        if self.__size == 0:
            print()
            return
        if self.__position[1] > 0:
            for m in range(self.__position[1]):
                print()
        for i in range(self.__size):
            if self.__position[0] > 0:
                for k in range(self.__position[0]):
                    print(' ', end='')
            for j in range(self.__size):
                print("#", end='')
            print()

    def __str__(self):
        """print a square like my_print"""
        if self.__size == 0:
            print()
        else:
            if self.__position[1] > 0:
                for m in range(self.__position[1]):
                    print()
            for i in range(self.__size):
                if self.__position[0] > 0:
                    for k in range(self.__position[0]):
                        print(' ', end='')
                for j in range(self.__size):
                    print("#", end='')
                print()
        return ""
