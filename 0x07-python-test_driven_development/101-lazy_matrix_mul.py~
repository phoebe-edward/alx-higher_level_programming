#!/usr/bin/python3
"""lazy matrix multiplication"""
import numpy as np


def lazy_matrix_mul(m_a, m_b):
    """multiply two matrices using numpy lib"""

    if not isinstance(m_a, list):
        raise TypeError("m_a must be a list")
    if not isinstance(m_b, list):
        raise TypeError("m_b must be a list")
    if not all(isinstance(el, list) for el in m_a):
        raise TypeError("m_a must be a list of lists")
    if not all(isinstance(el2, list) for el2 in m_b):
        raise TypeError("m_b must be a list of lists")
    if len(m_a) == 0 or len(m_a[0]) == 0:
        raise ValueError("m_a can't be empty")
    if len(m_b) == 0 or len(m_b[0]) == 0:
        raise ValueError("m_b can't be empty")
    for row in m_a:
        if not all(isinstance(el, (int, float)) for el in row):
            raise TypeError("m_a should contain only integers or floats")
    for row2 in m_b:
        if not all(isinstance(el2, (int, float)) for el2 in row2):
            raise TypeError("m_b should contain only integers or floats")
    if not all(len(row) == len(m_a[0]) for row in m_a):
        raise TypeError("each row of m_a must be of the same size")
    if not all(len(row2) == len(m_b[0]) for row2 in m_b):
        raise TypeError("each row of m_b must be of the same size")
    
    if len(m_a[0]) != len(m_b):
        raise ValueError("m_a and m_b can't be multiplied")
    res = np.matmul(m_a, m_b)
    return res
